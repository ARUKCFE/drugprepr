devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
dataset<-read.csv("R:/Projects/CPRD/analyses/Multiverse study/Sample dat/sampledat.csv",header = T)
devtools::use_data(dataset)
usethis::use_data(dataset)
devtools::use_vignette("introduction to CPRDDrugPrep")
usethis::use_vignette("introduction to CPRDDrugPrep")
usethis::use_vignette("introduction_to_CPRDDrugPrep")
git remote add origin https://github.com/belayb/CPRDDrugPrepR
git remote add origin https://github.com/belayb/CPRDDrugPrepR
git remote add CPRDDrugPrep https://github.com/belayb/CPRDDrugPrepR.git
git remote add origin https://github.com/belayb/CPRDDrugPrepR.git
git branch --set-upstream-to=<remote>/<branch> master
library(intervalaverage)
?isolateoverlaps
x2 <- data.table(addr_id=rep(1:4,each=3),
exposure_start=rep(c(1L,7L,14L),times=4),
exposure_end=rep(c(7L,14L,21L),times=4),
exposure_value=c(rnorm(12))
)
x2
x2 <- data.table(addr_id=rep(1:4,each=3),
exposure_start=rep(c(1L,7L,14L),times=4),
exposure_end=rep(c(7L,14L,21L),times=4),
exposure_value=c(runif(0,10))
)
?runif
x2 <- data.table(addr_id=rep(1:4,each=3),
exposure_start=rep(c(1L,7L,14L),times=4),
exposure_end=rep(c(7L,14L,21L),times=4),
exposure_value=c(runif(12, min = 1, max = 10))
)
x2
x2 <- data.table(addr_id=rep(1:4,each=3),
exposure_start=rep(c(1L,7L,14L),times=4),
exposure_end=rep(c(7L,14L,21L),times=4),
exposure_value=c(round(runif(12, min = 1, max = 10),digits=0)))
x2
x2z <- isolateoverlaps(x2,interval_vars=c("exposure_start","exposure_end"),group_vars=c("addr_id"))
x2z
#x2b represents x2 when where exposure values in overlapping intervals have been averaged
x2b <- x2z[, list(exposure_value=mean(exposure_value)),by=c("addr_id","start","end")]
x2b
x2 <- data.table(addr_id=rep(1:4,each=3),
exposure_start=rep(c(1L,7L,14L),times=4),
exposure_end=rep(c(7L,14L,21L),times=4),
exposure_value=c(round(runif(12, min = 1, max = 10),digits=0)))
x2
x2z <- isolateoverlaps(x2,interval_vars=c("exposure_start","exposure_end"),group_vars=c("addr_id"))
#x2b represents x2 when where exposure values in overlapping intervals have been averaged
x2b <- x2z[, list(exposure_value=mean(exposure_value)),by=c("addr_id","start","end")]
x2b
x2z
x2
x2
x2 <- data.table(patid=rep(1:2,each=5),
exposure_start=rep(c(1L,5L,10L,26L,31L),times=2),
exposure_end=rep(c(7L,14L,18L,30L,40L),times=2),
exposure_value=c(round(runif(20, min = 1, max = 10),digits=0)))
x2
rep(1:2,each=5)
x2 <- data.table(patid=rep(1:2,each=5),
exposure_start=rep(c(1L,5L,10L,26L,31L),times=2),
exposure_end=rep(c(7L,14L,18L,30L,40L),times=2),
exposure_value=c(round(runif(20, min = 1, max = 10),digits=0)))
x2
x2 <- data.table(patid=rep(1:2,each=5),
exposure_start=rep(c(1L,5L,10L,26L,31L),times=2),
exposure_end=rep(c(7L,14L,18L,30L,40L),times=2),
exposure_value=c(round(runif(10, min = 1, max = 10),digits=0)))
x2
x2z <- isolateoverlaps(x2,interval_vars=c("exposure_start","exposure_end"),group_vars=c("patid"))
x2z
# Approch one----if there is space enough to accomodate the overlap do it if not ignore it
# Isolate
# Generate a row indictor by patid, prodcode, start
# compuate new duration stop-start
# compute the gap between each conscutative rows by patid
# If gap  less than the duration of the first overlap and have a prodcode similar to the previous one insert
# do the above step for all overlaps
x2z<-x2z[, presc_id := rowid(patid,start)]
x2z
x2z
x2z<-x2z[, new_duration := end-start]
x2z
x2z
x2z<-x2z[, gap := end-shift(start, 1, type="lead"), by=patid]
x2z
x2z
